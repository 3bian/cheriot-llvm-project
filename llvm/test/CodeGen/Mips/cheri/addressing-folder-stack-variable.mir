# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: %cheri_purecap_llc -cheri-cap-table-abi=pcrel %s -verify-machineinstrs -run-pass=cheriaddrmodefolder  -o - | FileCheck %s
--- |
  source_filename = "llvm/test/CodeGen/Mips/cheri/addressing-folder-crash.ll"

  %"class.JSC::WeakImpl" = type { i8 addrspace(200)* }

  $_ZN3JSC8WeakImpl7jsValueEv = comdat any

  define hidden void @_ZN3JSC8WeakImpl7jsValueEv(%"class.JSC::WeakImpl" addrspace(200)* %this) addrspace(200) #0 comdat align 2 {
  entry:
    %this.addr = alloca %"class.JSC::WeakImpl" addrspace(200)*, align 16, addrspace(200)
    %0 = bitcast %"class.JSC::WeakImpl" addrspace(200)* addrspace(200)* %this.addr to i8 addrspace(200)*
    %1 = call i8 addrspace(200)* @llvm.mips.stack.to.cap(i8 addrspace(200)* %0)
    %2 = bitcast i8 addrspace(200)* %1 to %"class.JSC::WeakImpl" addrspace(200)* addrspace(200)*
    store %"class.JSC::WeakImpl" addrspace(200)* %this, %"class.JSC::WeakImpl" addrspace(200)* addrspace(200)* %2, align 16
    ret void
  }

  ; Function Attrs: nounwind readnone
  declare i8 addrspace(200)* @llvm.cheri.cap.bounds.set.i64(i8 addrspace(200)*, i64) addrspace(200) #1

  ; Function Attrs: nounwind readnone
  declare i8 addrspace(200)* @llvm.mips.stack.to.cap(i8 addrspace(200)*) addrspace(200) #1

  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) addrspace(200) #2

  attributes #0 ={ nounwind }
  attributes #1 = { nounwind readnone }
  attributes #2 = { nounwind }

...
---
name:            _ZN3JSC8WeakImpl7jsValueEv
alignment:       8
tracksRegLiveness: true
hasWinCFI:       false
registers:
  - { id: 0, class: cherigpr, preferred-register: '' }
  - { id: 1, class: cherigpr, preferred-register: '' }
liveins:
  - { reg: '$c3', virtual-reg: '%0' }
fixedStack:      []
stack:
  - { id: 0, name: this.addr, type: default, offset: 0, size: 16, alignment: 16,
      stack-id: default, callee-saved-register: '', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
constants:       []
body:             |
  bb.0.entry:
    liveins: $c3

    ;; Check that frame indices are not changed by the addressingmodefolder:
    ; CHECK-LABEL: name: _ZN3JSC8WeakImpl7jsValueEv
    ; CHECK: liveins: $c3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:cherigpr = COPY $c3
    ; CHECK-NEXT: [[CIncOffset:%[0-9]+]]:cherigpr = CIncOffset %stack.0.this.addr, $zero_64
    ; CHECK-NEXT: STORECAP [[COPY]], $zero_64, 0, killed [[CIncOffset]] :: (store (s128) into %ir.2, addrspace 200)
    ; CHECK-NEXT: CapRetPseudo
    %0:cherigpr = COPY $c3
    %1:cherigpr = CIncOffset %stack.0.this.addr, $zero_64
    STORECAP %0, $zero_64, 0, killed %1 :: (store (s128) into %ir.2, addrspace 200)
    CapRetPseudo

...
