// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
// RUN: %cheri_purecap_cc1 -std=c++11 -o - -emit-llvm -O0 %s | FileCheck %s
// Reduced testcase from ubsan runtime
typedef __uintcap_t uptr;
class Value {
  uptr Val;
public:
__int128 getSIntValue() const;
};
// CHECK-LABEL: @_ZNK5Value12getSIntValueEv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[THIS_ADDR:%.*]] = alloca ptr addrspace(200), align 16, addrspace(200)
// CHECK-NEXT:    store ptr addrspace(200) [[THIS:%.*]], ptr addrspace(200) [[THIS_ADDR]], align 16
// CHECK-NEXT:    [[THIS1:%.*]] = load ptr addrspace(200), ptr addrspace(200) [[THIS_ADDR]], align 16
// CHECK-NEXT:    [[VAL:%.*]] = getelementptr inbounds [[CLASS_VALUE:%.*]], ptr addrspace(200) [[THIS1]], i32 0, i32 0
// CHECK-NEXT:    [[TMP0:%.*]] = load ptr addrspace(200), ptr addrspace(200) [[VAL]], align 16
// CHECK-NEXT:    [[TMP1:%.*]] = call i64 @llvm.cheri.cap.address.get.i64(ptr addrspace(200) [[TMP0]])
// CHECK-NEXT:    [[CONV:%.*]] = zext i64 [[TMP1]] to i128
// CHECK-NEXT:    ret i128 [[CONV]]
//
__int128 Value::getSIntValue() const {
  return __int128(Val);
}
