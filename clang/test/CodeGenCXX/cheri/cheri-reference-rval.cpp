// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
// RUN: %cheri_cc1 -emit-llvm -o - %s | FileCheck %s
// Check that rvalue references to capabilities use the correct IR type
__intcap_t g();

// CHECK-LABEL: @_Z1fv(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[A2:%.*]] = alloca ptr, align 8
// CHECK-NEXT:    [[REF_TMP:%.*]] = alloca ptr addrspace(200), align 16
// CHECK-NEXT:    [[CALL:%.*]] = call noundef ptr addrspace(200) @_Z1gv()
// CHECK-NEXT:    store ptr addrspace(200) [[CALL]], ptr [[REF_TMP]], align 16
// CHECK-NEXT:    store ptr [[REF_TMP]], ptr [[A2]], align 8
// CHECK-NEXT:    [[TMP0:%.*]] = load ptr, ptr [[A2]], align 8
// CHECK-NEXT:    [[TMP1:%.*]] = load ptr addrspace(200), ptr [[TMP0]], align 16
// CHECK-NEXT:    [[CMP:%.*]] = icmp eq ptr addrspace(200) [[TMP1]], null
// CHECK-NEXT:    ret i1 [[CMP]]
//
bool f() {
  __intcap_t&& a2 = g();
  return a2 == 0;
}
