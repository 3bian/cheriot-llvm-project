// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature
// This previously crashed because of wrong value of SuitableAlign in Mips.h
// RUN: %cheri128_purecap_cc1 -fexceptions -fcxx-exceptions -o - -O0 -emit-llvm -disable-O0-optnone %s | FileCheck %s
class a {
public:
  virtual ~a();
};
const int i = __BIGGEST_ALIGNMENT__;
const int *j = &i;
// CHECK-LABEL: define {{[^@]+}}@_Z1bv
// CHECK-SAME: () addrspace(200) #[[ATTR0:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[EXCEPTION:%.*]] = call ptr addrspace(200) @__cxa_allocate_exception(i64 16) #[[ATTR4:[0-9]+]]
// CHECK-NEXT:    call void @llvm.memset.p200.i64(ptr addrspace(200) align 16 [[EXCEPTION]], i8 0, i64 16, i1 false)
// CHECK-NEXT:    call void @_ZN1aC1Ev(ptr addrspace(200) noundef nonnull align 16 dereferenceable(16) [[EXCEPTION]]) #[[ATTR4]]
// CHECK-NEXT:    call void @__cxa_throw(ptr addrspace(200) [[EXCEPTION]], ptr addrspace(200) @_ZTI1a, ptr addrspace(200) @_ZN1aD1Ev) #[[ATTR5:[0-9]+]]
// CHECK-NEXT:    unreachable
//
void b() {
  throw a();
}
