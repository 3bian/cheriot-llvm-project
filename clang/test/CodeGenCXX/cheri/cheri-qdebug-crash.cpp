// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature
// RUN: %cheri_cc1 %s -std=c++14 -emit-llvm -O0 -o - | %cheri_FileCheck -check-prefix=HYBRID %s
// RUN: %cheri_purecap_cc1 %s -std=c++14 -emit-llvm -O0 -o - | %cheri_FileCheck -check-prefix=PURECAP %s

// Reduced test case from a crash compiling qdebug.cpp (caused by passing pointers-to-members as arguments)

class QTextStream {};
class QDebug {
  void putUcs4();
private:
  QTextStream ts;
};
typedef void (QTextStream::*g)();
class QTextStreamManipulator {
  g i;
};
QTextStream& operator<<(QTextStream&, QTextStreamManipulator);
QTextStreamManipulator qSetPadChar();

// HYBRID-LABEL: define {{[^@]+}}@_ZN6QDebug7putUcs4Ev
// HYBRID-SAME: (ptr noundef nonnull align 1 dereferenceable(1) [[THIS:%.*]]) #[[ATTR0:[0-9]+]] align 2 {
// HYBRID-NEXT:  entry:
// HYBRID-NEXT:    [[THIS_ADDR:%.*]] = alloca ptr, align 8
// HYBRID-NEXT:    [[AGG_TMP:%.*]] = alloca [[CLASS_QTEXTSTREAMMANIPULATOR:%.*]], align 8
// HYBRID-NEXT:    store ptr [[THIS]], ptr [[THIS_ADDR]], align 8
// HYBRID-NEXT:    [[THIS1:%.*]] = load ptr, ptr [[THIS_ADDR]], align 8
// HYBRID-NEXT:    [[TS:%.*]] = getelementptr inbounds [[CLASS_QDEBUG:%.*]], ptr [[THIS1]], i32 0, i32 0
// HYBRID-NEXT:    [[CALL:%.*]] = call inreg { i64, i64 } @_Z11qSetPadCharv()
// HYBRID-NEXT:    [[COERCE_DIVE:%.*]] = getelementptr inbounds [[CLASS_QTEXTSTREAMMANIPULATOR]], ptr [[AGG_TMP]], i32 0, i32 0
// HYBRID-NEXT:    [[TMP0:%.*]] = getelementptr inbounds { i64, i64 }, ptr [[COERCE_DIVE]], i32 0, i32 0
// HYBRID-NEXT:    [[TMP1:%.*]] = extractvalue { i64, i64 } [[CALL]], 0
// HYBRID-NEXT:    store i64 [[TMP1]], ptr [[TMP0]], align 8
// HYBRID-NEXT:    [[TMP2:%.*]] = getelementptr inbounds { i64, i64 }, ptr [[COERCE_DIVE]], i32 0, i32 1
// HYBRID-NEXT:    [[TMP3:%.*]] = extractvalue { i64, i64 } [[CALL]], 1
// HYBRID-NEXT:    store i64 [[TMP3]], ptr [[TMP2]], align 8
// HYBRID-NEXT:    [[TMP4:%.*]] = getelementptr inbounds { i64, i64 }, ptr [[AGG_TMP]], i32 0, i32 0
// HYBRID-NEXT:    [[TMP5:%.*]] = load i64, ptr [[TMP4]], align 8
// HYBRID-NEXT:    [[TMP6:%.*]] = getelementptr inbounds { i64, i64 }, ptr [[AGG_TMP]], i32 0, i32 1
// HYBRID-NEXT:    [[TMP7:%.*]] = load i64, ptr [[TMP6]], align 8
// HYBRID-NEXT:    [[CALL2:%.*]] = call noundef nonnull align 1 dereferenceable(1) ptr @_ZlsR11QTextStream22QTextStreamManipulator(ptr noundef nonnull align 1 dereferenceable(1) [[TS]], i64 inreg [[TMP5]], i64 inreg [[TMP7]])
// HYBRID-NEXT:    ret void
//
// PURECAP-LABEL: define {{[^@]+}}@_ZN6QDebug7putUcs4Ev
// PURECAP-SAME: (ptr addrspace(200) noundef nonnull align 1 dereferenceable(1) [[THIS:%.*]]) addrspace(200) #[[ATTR0:[0-9]+]] align 2 {
// PURECAP-NEXT:  entry:
// PURECAP-NEXT:    [[THIS_ADDR:%.*]] = alloca ptr addrspace(200), align 16, addrspace(200)
// PURECAP-NEXT:    [[AGG_TMP:%.*]] = alloca [[CLASS_QTEXTSTREAMMANIPULATOR:%.*]], align 16, addrspace(200)
// PURECAP-NEXT:    store ptr addrspace(200) [[THIS]], ptr addrspace(200) [[THIS_ADDR]], align 16
// PURECAP-NEXT:    [[THIS1:%.*]] = load ptr addrspace(200), ptr addrspace(200) [[THIS_ADDR]], align 16
// PURECAP-NEXT:    [[TS:%.*]] = getelementptr inbounds [[CLASS_QDEBUG:%.*]], ptr addrspace(200) [[THIS1]], i32 0, i32 0
// PURECAP-NEXT:    [[CALL:%.*]] = call inreg { { ptr addrspace(200), i64 } } @_Z11qSetPadCharv()
// PURECAP-NEXT:    [[COERCE_DIVE:%.*]] = getelementptr inbounds [[CLASS_QTEXTSTREAMMANIPULATOR]], ptr addrspace(200) [[AGG_TMP]], i32 0, i32 0
// PURECAP-NEXT:    [[TMP0:%.*]] = getelementptr inbounds { { ptr addrspace(200), i64 } }, ptr addrspace(200) [[COERCE_DIVE]], i32 0, i32 0
// PURECAP-NEXT:    [[TMP1:%.*]] = extractvalue { { ptr addrspace(200), i64 } } [[CALL]], 0
// PURECAP-NEXT:    store { ptr addrspace(200), i64 } [[TMP1]], ptr addrspace(200) [[TMP0]], align 16
// PURECAP-NEXT:    [[TMP2:%.*]] = getelementptr inbounds { { ptr addrspace(200), i64 } }, ptr addrspace(200) [[AGG_TMP]], i32 0, i32 0
// PURECAP-NEXT:    [[TMP3:%.*]] = load { ptr addrspace(200), i64 }, ptr addrspace(200) [[TMP2]], align 16
// PURECAP-NEXT:    [[CALL2:%.*]] = call noundef nonnull align 1 dereferenceable(1) ptr addrspace(200) @_ZlsR11QTextStream22QTextStreamManipulator(ptr addrspace(200) noundef nonnull align 1 dereferenceable(1) [[TS]], { ptr addrspace(200), i64 } inreg [[TMP3]])
// PURECAP-NEXT:    ret void
//
void QDebug::putUcs4() {
  // Note: pointers-to-members are also returned inreg for purecap now
  ts << qSetPadChar();
}

