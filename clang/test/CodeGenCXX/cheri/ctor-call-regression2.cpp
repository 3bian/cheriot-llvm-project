// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature
// This was previously asserting in TryEmitBaseDestructorAsAlias()
// RUN: %cheri_purecap_cc1 -mconstructor-aliases -O2 -std=c++11 -fcxx-exceptions -fexceptions -o - -emit-llvm %s | FileCheck %s

class a {
public:
  static a b;
};
class c {
public:
  ~c();
};
class C : c {
public:
  C(int *, a);
};
int d;
// CHECK-LABEL: define {{[^@]+}}@_Z1ev
// CHECK-SAME: () local_unnamed_addr addrspace(200) #[[ATTR0:[0-9]+]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[AGG_TMP_ENSURED:%.*]] = alloca [[CLASS_C:%.*]], align 1, addrspace(200)
// CHECK-NEXT:    call void @_ZN1CC1EPi1a(ptr addrspace(200) noundef nonnull align 1 dereferenceable(1) [[AGG_TMP_ENSURED]], ptr addrspace(200) noundef nonnull @d, i8 inreg undef)
// CHECK-NEXT:    call void @_ZN1cD2Ev(ptr addrspace(200) noundef nonnull align 1 dereferenceable(1) [[AGG_TMP_ENSURED]]) #[[ATTR3:[0-9]+]]
// CHECK-NEXT:    ret void
//
void e() { C(&d, a::b); }

// UTC_ARGS: --disable
// C::C(int* cap, a):
// CHECK: declare void @_ZN1CC1EPi1a(ptr addrspace(200) noundef nonnull align 1 dereferenceable(1), ptr addrspace(200) noundef, i8 inreg) unnamed_addr
